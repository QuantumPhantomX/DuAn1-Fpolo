/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.raven.form;

import Model_Bill.HoaDon;
import Model_Bill.HoaDonChiTiet;
import Model_KhachHang_NhanVien.KhachHang;
import Model_Product.DetailSanPham;
import Repository_BanHang.Repository_BanHang;
import Repository_Bill.Repository_HoaDonChiTiet;
import Repository_KhachHang_NhanVien.KhachHangService1;
import Repository_Product.Repository_Detail;
import com.raven.main.Login;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAVEN
 */
public class Sell extends javax.swing.JPanel {

    /**
     * Creates new form Form_1
     */
    private Repository_Detail rp = new Repository_Detail();
    private Repository_BanHang bh = new Repository_BanHang();
    private DefaultTableModel model = new DefaultTableModel();
    private KhachHangService1 kh = new KhachHangService1();
    private int i = -1;

    public Sell() {
        initComponents();
        this.fillTable(rp.getAll());
        txtTenNhanVien.setText(Login.tenNhanVienDangNhap);
        scrollPaneGoiY.setVisible(false);
    }

    void fillTable(ArrayList<DetailSanPham> list) {
        model = (DefaultTableModel) tblSanPhamChiTiet.getModel();
        model.setRowCount(0);

        for (DetailSanPham sp : list) {
            model.addRow(sp.toDataRow2());
        }
    }

    void fillTableBangCho() {
        int idHoaDon = Integer.parseInt(txtMaHoaDon.getText());
        Repository_HoaDonChiTiet re = new Repository_HoaDonChiTiet();
        ArrayList<HoaDonChiTiet> listHoaDonChiTiet = re.getHoaDonChiTietByIdHoaDon(idHoaDon);
        DefaultTableModel model = (DefaultTableModel) tblBangCho.getModel();
        model.setRowCount(0);
        for (HoaDonChiTiet hdct1 : listHoaDonChiTiet) {
            model.addRow(hdct1.toDataRow());
        }
    }

    void fillTable2() {
        ArrayList<HoaDonChiTiet> list = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) tblBangCho.getModel();
        model.setRowCount(0);
        for (HoaDonChiTiet hdct : list) {
            model.addRow(new Object[]{
                null,
                null,
                null,
                null,
                null,
                null
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        selectAll = new javax.swing.JCheckBox();
        btnDeleteGH = new javax.swing.JButton();
        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel1 = new javax.swing.JPanel();
        cboLocHoaDon = new javax.swing.JComboBox<>();
        btnTaoHD = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblSanPhamChiTiet = new javax.swing.JTable();
        txtTimKiem1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnDeleteGH1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblBangCho = new javax.swing.JTable();
        btnDeleteGH2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JTextField();
        scrollPaneGoiY = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListGoiY = new javax.swing.JList<>();
        txtTenKhachHang = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTenNhanVien = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        txtMaHoaDon = new javax.swing.JTextField();
        txtTienThua = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cboHinhThucThanhToan = new javax.swing.JComboBox<>();
        txtTongTien = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtTienThanhToan = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        btnSuccesHoaDon = new javax.swing.JButton();
        btnSuccesHoaDon1 = new javax.swing.JButton();
        btnHuyDon = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Giỏ hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm chi tiết", "Tên sản phẩm", "Đơn giá", "Số lượng", "Thành tiền", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGioHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblGioHang);

        selectAll.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selectAll.setText("Tất cả");
        selectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllActionPerformed(evt);
            }
        });

        btnDeleteGH.setBackground(new java.awt.Color(255, 51, 0));
        btnDeleteGH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteGH.setText("Xóa");
        btnDeleteGH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(selectAll)
                .addGap(63, 63, 63)
                .addComponent(btnDeleteGH)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1371, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectAll)
                    .addComponent(btnDeleteGH))
                .addGap(0, 207, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        cboLocHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboLocHoaDon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa thanh toán", "Đã thanh toán", "Đã hủy" }));
        cboLocHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLocHoaDonActionPerformed(evt);
            }
        });

        btnTaoHD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTaoHD.setText("Tạo hóa đơn");
        btnTaoHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHDActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(0, 204, 0));
        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setText("Làm mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        tblHoaDon1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblHoaDon1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã HĐ", "Nhân viên", "Khách hàng", "HT Thanh Toán", "Ghi chú", "Tổng Tiền", "Ngày tạo", "Ngày sửa", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDon1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(btnTaoHD)
                .addGap(103, 103, 103)
                .addComponent(cboLocHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 4, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboLocHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTaoHD)
                    .addComponent(btnClear))
                .addContainerGap(142, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Tìm kiếm");

        tblSanPhamChiTiet.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblSanPhamChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "ID Sản phẩm", "Tên SP", "Màu sắc", "Size", "Chất liệu", "Thương hiệu", "Loại cổ áo", "Giá bán", "Số lượng", "Mô tả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPhamChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamChiTietMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblSanPhamChiTietMouseEntered(evt);
            }
        });
        jScrollPane4.setViewportView(tblSanPhamChiTiet);

        txtTimKiem1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTimKiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiem1ActionPerformed(evt);
            }
        });
        txtTimKiem1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiem1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(392, 392, 392))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Giỏ hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btnDeleteGH1.setBackground(new java.awt.Color(255, 51, 0));
        btnDeleteGH1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteGH1.setText("Xóa");
        btnDeleteGH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGH1ActionPerformed(evt);
            }
        });

        tblBangCho.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblBangCho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "ID_HoaDon", "ID_SPCT", "Tên SP", "Màu sắc ", "Size", "Chất liệu", "Thương hiệu", "Cổ áo", "giá bán", "Số lượng", "ThanhTien", "TrangThai"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, true, true, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBangCho.setPreferredSize(new java.awt.Dimension(1900, 200));
        tblBangCho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBangChoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblBangCho);

        btnDeleteGH2.setBackground(new java.awt.Color(255, 51, 0));
        btnDeleteGH2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteGH2.setText("Xóa toàn bộ");
        btnDeleteGH2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGH2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeleteGH1)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteGH2)
                .addGap(17, 17, 17))
            .addComponent(jScrollPane3)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteGH1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteGH2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Thông tin đơn hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Thông tin Chung", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("SĐT");
        jPanel7.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 90, -1));

        btnThem.setBackground(new java.awt.Color(0, 204, 204));
        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Add");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel7.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 60, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Tên khách hàng");
        jPanel7.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, 20));

        txtSoDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoDienThoaiActionPerformed(evt);
            }
        });
        txtSoDienThoai.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoDienThoaiKeyReleased(evt);
            }
        });
        jPanel7.add(txtSoDienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 150, -1));

        ListGoiY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListGoiYMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ListGoiY);

        scrollPaneGoiY.setViewportView(jScrollPane5);

        jPanel7.add(scrollPaneGoiY, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 150, 120));

        txtTenKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenKhachHang.setToolTipText("Nhập số điện thoại khách hàng");
        jPanel7.add(txtTenKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 220, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Tên nhân viên");
        jPanel7.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        txtTenNhanVien.setEditable(false);
        txtTenNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTenNhanVien.setEnabled(false);
        txtTenNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNhanVienjTextField4ActionPerformed(evt);
            }
        });
        jPanel7.add(txtTenNhanVien, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 120, 220, -1));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Thông tin hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        txtMaHoaDon.setEditable(false);
        txtMaHoaDon.setBackground(new java.awt.Color(255, 255, 255));
        txtMaHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHoaDonActionPerformed(evt);
            }
        });

        txtTienThua.setEditable(false);
        txtTienThua.setBackground(new java.awt.Color(255, 255, 255));
        txtTienThua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Tổng tiền(VNĐ)");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Tiền thừa(VNĐ)");

        cboHinhThucThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboHinhThucThanhToan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chuyển khoản", "Tiền mặt" }));
        cboHinhThucThanhToan.setToolTipText("");
        cboHinhThucThanhToan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboHinhThucThanhToanItemStateChanged(evt);
            }
        });

        txtTongTien.setEditable(false);
        txtTongTien.setBackground(new java.awt.Color(255, 255, 255));
        txtTongTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Hình thức thanh toán");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Tiền Thanh toán(VNĐ)");

        txtTienThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTienThanhToan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienThanhToanKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienThanhToanKeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Mã hóa đơn");

        btnSuccesHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSuccesHoaDon.setText("Xác nhận thanh toán");
        btnSuccesHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuccesHoaDonActionPerformed(evt);
            }
        });

        btnSuccesHoaDon1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSuccesHoaDon1.setText("In Hóa Đơn");
        btnSuccesHoaDon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuccesHoaDon1ActionPerformed(evt);
            }
        });

        btnHuyDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuyDon.setText("Hủy đơn");
        btnHuyDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTienThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 28, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel18))
                            .addGap(58, 58, 58)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTongTien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                .addComponent(txtMaHoaDon)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addGap(22, 22, 22)
                            .addComponent(cboHinhThucThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnSuccesHoaDon1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSuccesHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnHuyDon, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(cboHinhThucThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtTienThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(44, 44, 44)
                .addComponent(btnSuccesHoaDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSuccesHoaDon1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHuyDon)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboLocHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLocHoaDonActionPerformed
        locHoaDon();
    }//GEN-LAST:event_cboLocHoaDonActionPerformed

    private void btnHuyDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDonActionPerformed
        try {
            int idHoaDon = Integer.parseInt(txtMaHoaDon.getText());
            HoaDon hoaDon = bh.getHoaDonById(idHoaDon);
            if (hoaDon == null) {
                JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn");
                return;
            }
            if (hoaDon.getTrangThai().equals("Đã thanh toán")) {
                JOptionPane.showMessageDialog(this, "Không thể hủy hóa đơn đã thanh toán.");
                return;
            }

            String lyDoHuy = JOptionPane.showInputDialog(this, "Nhập lý do hủy đơn:", "Hủy đơn hàng", JOptionPane.PLAIN_MESSAGE);
            if (lyDoHuy == null || lyDoHuy.isEmpty()) {
                return;
            }

            hoaDon.setTrangThai("Đã hủy");
            hoaDon.setLichSuHoaDon(lyDoHuy);
            bh.capNhatHoaDonTrangThai(hoaDon);
            fillTableHoaDon(bh.getHoaDonChuaThanhToan());

            JOptionPane.showMessageDialog(this, "Hủy đơn hàng thành công!");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi hủy đơn hàng: " + e.getMessage());
        }
    }//GEN-LAST:event_btnHuyDonActionPerformed

    private void btnTaoHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHDActionPerformed
        try {
            int newHoaDonId = bh.generateHoaDonId();
            HoaDon newHoaDon = new HoaDon();
            newHoaDon.setId(newHoaDonId);
            bh.themHoaDon(newHoaDon);
            JOptionPane.showMessageDialog(this, "Tạo hóa đơn thành công! Mã hóa đơn: " + newHoaDonId);

            fillTableHoaDon(bh.getHoaDonChuaThanhToan());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi tạo hóa đơn: " + e.getMessage());
        }
    }//GEN-LAST:event_btnTaoHDActionPerformed
    private void fillTableHoaDon(ArrayList<HoaDon> listHoaDon) {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon1.getModel();
        model.setRowCount(0);
        for (HoaDon hd : listHoaDon) {
            model.addRow(hd.toDataRow());
        }
    }

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        try {
            fillTableHoaDon(bh.getHoaDonChuaThanhToan());
        } catch (SQLException ex) {
            Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseClicked

    }//GEN-LAST:event_tblGioHangMouseClicked

    private void selectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllActionPerformed

    }//GEN-LAST:event_selectAllActionPerformed

    private void btnDeleteGHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGHActionPerformed

    }//GEN-LAST:event_btnDeleteGHActionPerformed

    private void btnDeleteGH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGH1ActionPerformed
        int selectedRow = tblBangCho.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                int idHoaDon = Integer.parseInt(txtMaHoaDon.getText());
                String trangThaiHoaDon = bh.getTrangThaiHoaDonById(idHoaDon);
                if (trangThaiHoaDon != null && (trangThaiHoaDon.equals("Đã thanh toán") || trangThaiHoaDon.equals("Đã hủy"))) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa sản phẩm khỏi hóa đơn đã thanh toán hoặc đã hủy.");
                    return;
                }
                int idHoaDonChiTiet = (int) tblBangCho.getValueAt(selectedRow, 0);

                String idSanPhamChiTiet = (String) tblBangCho.getValueAt(selectedRow, 2);
                int soLuong = (int) tblBangCho.getValueAt(selectedRow, 10);

                bh.xoaHoaDonChiTiet(idHoaDonChiTiet);

                bh.tangSoLuongTonKho(idSanPhamChiTiet, soLuong);
                fillTableBangCho();
                this.fillTable(rp.getAll());
                try {
                    fillTableHoaDon(bh.getHoaDonChuaThanhToan());
                } catch (SQLException ex) {
                    Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                }
                capNhatTongTienHoaDon(idHoaDon);

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ.");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm khỏi giỏ hàng: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnDeleteGH1ActionPerformed

    private void txtTenNhanVienjTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNhanVienjTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNhanVienjTextField4ActionPerformed

    private void txtMaHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaHoaDonActionPerformed

    private void cboHinhThucThanhToanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboHinhThucThanhToanItemStateChanged

    }//GEN-LAST:event_cboHinhThucThanhToanItemStateChanged

    private void btnSuccesHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuccesHoaDonActionPerformed
        try {
            int idHoaDon = Integer.parseInt(txtMaHoaDon.getText());

            if (bh.getHoaDonChiTietByIdHoaDon(idHoaDon).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Giỏ hàng trống.");
                return;
            }

            String soDienThoai = txtSoDienThoai.getText();
            String tenKhachHang = txtTenKhachHang.getText();
            if (soDienThoai.isEmpty() || tenKhachHang.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin khách hàng.");
                return;
            }

            String hinhThucThanhToan = (String) cboHinhThucThanhToan.getSelectedItem();
            BigDecimal tongTien = new BigDecimal(txtTongTien.getText());
            BigDecimal tienThanhToan = BigDecimal.ZERO;

            if (hinhThucThanhToan.equals("Chuyển khoản")) {
                tienThanhToan = tongTien;
            } else {
                try {
                    tienThanhToan = new BigDecimal(txtTienThanhToan.getText());
                    if (tienThanhToan.compareTo(tongTien) < 0) {
                        JOptionPane.showMessageDialog(this, "Số tiền thanh toán không đủ.");
                        return;
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Số tiền thanh toán không hợp lệ.");
                    return;
                }
            }

            BigDecimal tienThua = tienThanhToan.subtract(tongTien);
            txtTienThua.setText(tienThua.toString());

            HoaDon hoaDon = new HoaDon();
            hoaDon.setId(idHoaDon);
            hoaDon.setTenKhachHang(tenKhachHang);
            hoaDon.setTenNhanVien(Login.tenNhanVienDangNhap);
            hoaDon.setHinhThucThanhToan(hinhThucThanhToan);
            hoaDon.setTongTien(tongTien);
            hoaDon.setTrangThai("Đã thanh toán");
            bh.capNhatHoaDonThanhToan(hoaDon);

            JOptionPane.showMessageDialog(this, "Thanh toán thành công!");
            fillTable2();
            fillTable(rp.getAll());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thanh toán: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSuccesHoaDonActionPerformed

    private void tblSanPhamChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamChiTietMouseClicked

        if (evt.getClickCount() == 2) {
            int selectedRow = tblSanPhamChiTiet.getSelectedRow();
            if (selectedRow >= 0) {
                String idSanPhamChiTiet = (String) tblSanPhamChiTiet.getValueAt(selectedRow, 0);
                String tenSanPham = (String) tblSanPhamChiTiet.getValueAt(selectedRow, 2);
                BigDecimal giaBan = (BigDecimal) tblSanPhamChiTiet.getValueAt(selectedRow, 8);

                String soLuongStr = JOptionPane.showInputDialog(this, "Nhập số lượng cho sản phẩm " + tenSanPham + ":", "Số lượng", JOptionPane.PLAIN_MESSAGE);
                if (soLuongStr != null && !soLuongStr.isEmpty()) {
                    try {
                        int soLuong = Integer.parseInt(soLuongStr);
                        if (soLuong > 0) {
                            int soLuongTonKho = bh.laySoLuongTonKho(idSanPhamChiTiet);
                            if (soLuong <= soLuongTonKho) {
                                themSanPhamVaoGioHang(idSanPhamChiTiet, soLuong, giaBan);
                                this.fillTable(rp.getAll());
                                try {
                                    fillTableHoaDon(bh.getHoaDonChuaThanhToan());
                                } catch (SQLException ex) {
                                    Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "Số lượng tồn kho không đủ.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0.");
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Số lượng không hợp lệ.");
                    }
                }
            }
        }
    }//GEN-LAST:event_tblSanPhamChiTietMouseClicked
    private void themSanPhamVaoGioHang(String idSanPhamChiTiet, int soLuong, BigDecimal giaBan) {
        try {
            int idHoaDon = Integer.parseInt(txtMaHoaDon.getText());
            BigDecimal thanhTien = giaBan.multiply(BigDecimal.valueOf(soLuong));
            DetailSanPham detailSanPham = bh.getDetailSanPhamById(idSanPhamChiTiet);

            HoaDonChiTiet hdct = new HoaDonChiTiet();
            int newId = bh.generateHoaDonChiTietId();
            hdct.setId(newId);

            hdct.setIdHoaDon(idHoaDon);
            hdct.setIdSanPhamChiTiet(idSanPhamChiTiet);
            hdct.setTenSanPham(detailSanPham.getTenSanPham());
            hdct.setTenMauSac(detailSanPham.getTenMauSac());
            hdct.setTenSize(detailSanPham.getTenSize());
            hdct.setTenChatLieu(detailSanPham.getTenChatLieu());
            hdct.setTenThuongHieu(detailSanPham.getTenThuongHieu());
            hdct.setTenLoaiCoCao(detailSanPham.getTenLoaiCoCao());
            hdct.setGiaBan(giaBan);
            hdct.setSoLuong(soLuong);
            hdct.setThanhTien(thanhTien);
            hdct.setTrangThai("Chưa thanh toán");
            bh.themHoaDonChiTiet(hdct);
            bh.giamSoLuongTonKho(idSanPhamChiTiet, soLuong);
            fillTableBangCho();
            capNhatTongTienHoaDon(idHoaDon);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm sản phẩm vào giỏ hàng: " + e.getMessage());
        }
    }

    private void capNhatTongTienHoaDon(int idHoaDon) {
        try {
            BigDecimal tongTien = bh.tinhTongTienHoaDon(idHoaDon);

            txtTongTien.setText(tongTien != null ? tongTien.toString() : "0"); 

            HoaDon hoaDon = new HoaDon();
            hoaDon.setId(idHoaDon);
            hoaDon.setTongTien(tongTien); 
            bh.capNhatHoaDon(hoaDon);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật tổng tiền: " + e.getMessage());
        }
    }
    private void tblSanPhamChiTietMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamChiTietMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanPhamChiTietMouseEntered

    private void txtTimKiem1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiem1KeyReleased
        String keyword = txtTimKiem1.getText().trim();
        ArrayList<DetailSanPham> filteredDetailProducts = rp.searchDetailProductsByKeyword(keyword);
        fillTable(filteredDetailProducts);
    }//GEN-LAST:event_txtTimKiem1KeyReleased

    private void txtTimKiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiem1ActionPerformed

    private void tblBangChoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBangChoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBangChoMouseClicked

    private void btnDeleteGH2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGH2ActionPerformed
        // TODO add your handling code here:
        try {
            int idHoaDon = Integer.parseInt(txtMaHoaDon.getText());
                String trangThaiHoaDon = bh.getTrangThaiHoaDonById(idHoaDon);
                if (trangThaiHoaDon != null && (trangThaiHoaDon.equals("Đã thanh toán") || trangThaiHoaDon.equals("Đã hủy"))) {
                    JOptionPane.showMessageDialog(this, "Không thể xóa sản phẩm khỏi hóa đơn đã thanh toán hoặc đã hủy.");
                    return;
                }

            ArrayList<HoaDonChiTiet> listHoaDonChiTiet = bh.getHoaDonChiTietByIdHoaDon(idHoaDon);

            bh.xoaToanBoGioHang(idHoaDon);

            for (HoaDonChiTiet hdct : listHoaDonChiTiet) {
                bh.tangSoLuongTonKho(hdct.getIdSanPhamChiTiet(), hdct.getSoLuong());
            }

            fillTableBangCho();
            this.fillTable(rp.getAll());

            capNhatTongTienHoaDon(idHoaDon);
            try {
                fillTableHoaDon(bh.getHoaDonChuaThanhToan());
            } catch (SQLException ex) {
                Logger.getLogger(Sell.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã hóa đơn không hợp lệ.");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa toàn bộ giỏ hàng: " + e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteGH2ActionPerformed

    private void tblHoaDon1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDon1MouseClicked
        int selectedRow = tblHoaDon1.getSelectedRow();
        if (selectedRow >= 0) {
            int idHoaDon = (int) tblHoaDon1.getValueAt(selectedRow, 0);
            txtMaHoaDon.setText(String.valueOf(idHoaDon));
        }
        if (evt.getClickCount() == 2) {
            fillTableBangCho();
        }
    }//GEN-LAST:event_tblHoaDon1MouseClicked

    private void btnSuccesHoaDon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuccesHoaDon1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSuccesHoaDon1ActionPerformed

    private void ListGoiYMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListGoiYMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            String soDienThoaiChon = ListGoiY.getSelectedValue();
            if (soDienThoaiChon != null) {
                txtSoDienThoai.setText(soDienThoaiChon);
                KhachHang khachHang = kh.timKiemKhachHangTheoSDT(soDienThoaiChon);
                if (khachHang != null) {
                    txtTenKhachHang.setText(khachHang.getHoTen());
                }
                scrollPaneGoiY.setVisible(false);
            }
        }
    }//GEN-LAST:event_ListGoiYMouseClicked

    private void txtSoDienThoaiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoDienThoaiKeyReleased
        String soDienThoaiNhap = txtSoDienThoai.getText();
        ArrayList<String> danhSachSDT = kh.getDanhSachSoDienThoai();
        DefaultListModel<String> model = new DefaultListModel<>();

        if (!soDienThoaiNhap.isEmpty()) {
            for (String sdt : danhSachSDT) {
                if (sdt.toLowerCase().startsWith(soDienThoaiNhap.toLowerCase())) {
                    model.addElement(sdt);
                }
            }
        }

        ListGoiY.setModel(model);

        scrollPaneGoiY.setVisible(model.size() > 0);
        if (scrollPaneGoiY.isVisible()) {
            scrollPaneGoiY.setBounds(txtSoDienThoai.getX(), txtSoDienThoai.getY() + txtSoDienThoai.getHeight(), txtSoDienThoai.getWidth(), 100);
        }
    }//GEN-LAST:event_txtSoDienThoaiKeyReleased

    private void txtSoDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoDienThoaiActionPerformed

    }//GEN-LAST:event_txtSoDienThoaiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String soDienThoai = txtSoDienThoai.getText();
        String tenKhachHang = txtTenKhachHang.getText();

        if (!isValidSoDienThoai(soDienThoai)) {
            return;
        }

        if (tenKhachHang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên khách hàng.");
            return;
        }

        KhachHang khachHang = kh.timKiemKhachHangTheoSDT(soDienThoai);
        if (khachHang != null) {
            JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại.");
            return;
        }

        try {
            int newKhachHangId = kh.generateNewKhachHangId();
            KhachHang newKhachHang = new KhachHang(newKhachHangId, tenKhachHang, "", soDienThoai, "", "", new Date(), "");
            kh.themKhachHang(newKhachHang);
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công.");

            txtSoDienThoaiKeyReleased(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm khách hàng: " + e.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtTienThanhToanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienThanhToanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienThanhToanKeyPressed

    private void txtTienThanhToanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienThanhToanKeyReleased
        // TODO add your handling code here:
        try {
            BigDecimal tongTien = new BigDecimal(txtTongTien.getText());
            BigDecimal tienThanhToan = new BigDecimal(txtTienThanhToan.getText());
            BigDecimal tienThua = tienThanhToan.subtract(tongTien);
            txtTienThua.setText(tienThua.toString());
        } catch (NumberFormatException e) {
            txtTienThua.setText("0");
        }
    }//GEN-LAST:event_txtTienThanhToanKeyReleased
    private boolean isValidSoDienThoai(String soDienThoai) {
        if (soDienThoai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống.");
            return false;
        }

        if (!soDienThoai.startsWith("0")) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải bắt đầu bằng số 0.");
            return false;
        }

        if (soDienThoai.length() != 10) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải có 10 chữ số.");
            return false;
        }

        try {
            Long.valueOf(soDienThoai);
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số điện thoại phải là số.");
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListGoiY;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeleteGH;
    private javax.swing.JButton btnDeleteGH1;
    private javax.swing.JButton btnDeleteGH2;
    private javax.swing.JButton btnHuyDon;
    private javax.swing.JButton btnSuccesHoaDon;
    private javax.swing.JButton btnSuccesHoaDon1;
    private javax.swing.JButton btnTaoHD;
    private javax.swing.JButton btnThem;
    private javax.swing.JComboBox<String> cboHinhThucThanhToan;
    private javax.swing.JComboBox<String> cboLocHoaDon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane scrollPaneGoiY;
    private javax.swing.JCheckBox selectAll;
    private javax.swing.JTable tblBangCho;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblHoaDon1;
    private javax.swing.JTable tblSanPhamChiTiet;
    private javax.swing.JTextField txtMaHoaDon;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenKhachHang;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtTienThanhToan;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTimKiem1;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void locHoaDon() {
        String trangThai = (String) cboLocHoaDon.getSelectedItem();

        try {
            ArrayList<HoaDon> danhSachHoaDon;
            danhSachHoaDon = bh.getHoaDonTheoTrangThai(trangThai);
            fillTableHoaDon(danhSachHoaDon);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi khi lọc hóa đơn: " + ex.getMessage());
        }
    }
}
